#include <stdlib.h>
#include <iostream>

int* stackMemory1()
{
    int a = 1; // Создание локальной переменной 'a'
    return &a; // Возвращение указателя на 'a' (проблема: 'a' уничтожится после выхода из этой функции)
}

int* stackMemory2()
{
    int b = 2; // Создание локальной переменной 'b'
    return &b; // Возвращение указателя на 'b' (проблема: 'b' уничтожится после выхода из этой функции)
}

int main()
{
    int* b = stackMemory1(); // Получение указателя от 'stackMemory1'
    int a1 = *b; // Разыменование указателя (проблема: указатель 'b' теперь недействителен)
    int* c = stackMemory2(); // Получение указателя от 'stackMemory2'
    int a2 = *c; // Разыменование указателя (проблема: указатель 'c' теперь недействителен)
    int a3 = *b; // Попытка разыменовать недействительный указатель 'b'

    std::cout << a1 << std::endl; // Вывод a1 (неопределенное поведение)
    std::cout << a2 << std::endl; // Вывод a2 (неопределенное поведение)
    std::cout << a3 << std::endl; // Вывод a3 (неопределенное поведение)
    std::cout << ((std::byte*) b - (std::byte*) c) << std::endl; // Разница между указателями b и c (неопределенное поведение)

    return 0;
}
